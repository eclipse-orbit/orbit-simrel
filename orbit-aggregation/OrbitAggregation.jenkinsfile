pipeline {
  agent any

   options {
    buildDiscarder(logRotator(numToKeepStr: '10'))
    disableConcurrentBuilds()
    skipDefaultCheckout true
  }

  triggers {
    upstream(upstreamProjects: 'orbit-simrel-maven-osgi,orbit-simrel-maven-bnd,orbit-recipes', threshold: hudson.model.Result.SUCCESS)
  }

  tools {
    maven 'apache-maven-latest'
    jdk 'temurin-jdk17-latest'
  }

  environment {
    PUBLISH_LOCATION = 'simrel/orbit-aggregation'
  }

  parameters {
    choice(
      name: 'BUILD_TYPE',
      choices: ['nightly', 'milestone', 'release'],
      description: '''
        Choose the type of build.
        Note that a release build will not promote the build, but rather will promote the most recent milestone build.
        '''
    )

    string (
      name: 'ORBIT_LEGACY',
      defaultValue: 'https://download.eclipse.org/tools/orbit/simrel/orbit-legacy/nightly/latest',
      description: 'The Orbit Legacy repository to aggregate.<br/>Visit <a href="https://download.eclipse.org/tools/orbit/simrel/orbit-legacy/">https://download.eclipse.org/tools/orbit/simrel/orbit-legacy/<a/> for choices.'
    )

    string (
      name: 'MAVEN_OSGI',
      defaultValue: 'https://download.eclipse.org/tools/orbit/simrel/maven-osgi/nightly/latest',
      description: 'The Orbit Maven OSGi repository to aggregate.<br/>Visit <a href="https://download.eclipse.org/tools/orbit/simrel/maven-osgi/">https://download.eclipse.org/tools/orbit/simrel/maven-osgi/<a/> for choices.'
    )

    string (
      name: 'MAVEN_BND',
      defaultValue: 'https://download.eclipse.org/tools/orbit/simrel/maven-bnd/nightly/latest',
      description: 'The Orbit Maven BND repository to aggregate.<br/>Visit <a href="https://download.eclipse.org/tools/orbit/simrel/maven-bnd/">https://download.eclipse.org/tools/orbit/simrel/maven-bnd/<a/> for choices.'
    )

    string (
      name: 'MAVEN_SIGN',
      defaultValue: 'https://download.eclipse.org/tools/orbit/simrel/maven-sign/nightly/latest',
      description: 'The Orbit Maven Sign repository to aggregate.<br/>Visit <a href="https://download.eclipse.org/tools/orbit/simrel/maven-sign/">https://download.eclipse.org/tools/orbit/simrel/maven-sign/<a/> for choices.'
    )

    booleanParam(
      name: 'PROMOTE',
      defaultValue: true,
      description: 'Whether to promote the build to the download server.'
    )
  }

  stages {
    stage('Display Parameters') {
      steps {
        echo """
BUILD_TYPE=${params.BUILD_TYPE}
PROMOTE=${params.PROMOTE}
ORBIT_LEGACY=${params.ORBIT_LEGACY}
MAVEN_OSGI=${params.MAVEN_OSGI}
MAVEN_BND=${params.MAVEN_BND}
MAVEN_SIGN=${params.MAVEN_SIGN}
"""
        script {
          env.BUILD_TYPE = params.BUILD_TYPE
          env.PROMOTE = params.PROMOTE
          env.MAVEN_OSGI = params.MAVEN_OSGI
          env.ORBIT_LEGACY = params.ORBIT_LEGACY
          env.MAVEN_BND = params.MAVEN_BND
          env.MAVEN_SIGN = params.MAVEN_SIGN
        }
      }
    }

    stage('Git Checkout') {
      steps {
        script {
          def gitVariables = checkout(
            poll: false,
            scm: [
              $class: 'GitSCM',
              branches: [[name: '*/main']],
              doGenerateSubmoduleConfigurations: false,
              submoduleCfg: [],
              extensions: [
                [$class: 'CloneOption', shallow: true],
                [$class: 'SparseCheckoutPaths', sparseCheckoutPaths:[[$class:'SparseCheckoutPath', path:'orbit-aggregation/']]]
              ],
              userRemoteConfigs: [[url: 'https://github.com/eclipse-orbit/orbit-simrel.git' ]]
            ]
          )

          echo "$gitVariables"
          env.GIT_COMMIT = gitVariables.GIT_COMMIT
        }
      }
    }

    stage('Modify Aggregation') {
      steps {
        script {
          def contents = readFile( file: 'orbit-aggregation/orbit.aggr' )
          contents = contents.
            replaceAll('location="[^"]+" description="maven-osgi"', "location=\"${MAVEN_OSGI}\"").
            replaceAll('location="[^"]+" description="maven-bnd"', "location=\"${MAVEN_BND}\"").
            replaceAll('location="[^"]+" description="maven-sign"', "location=\"${MAVEN_SIGN}\"").
            replaceAll('location="[^"]+" description="orbit-legacy"', "location=\"${ORBIT_LEGACY}\"")
          echo "$contents"
          writeFile( file: 'orbit-aggregation/orbit.aggr', text: contents)
        }
      }
    }

    stage('Build Orbit Aggregation') {
      steps {
        sshagent(['projects-storage.eclipse.org-bot-ssh']) {
          dir('orbit-aggregation') {
            withCredentials([
                file(credentialsId: 'secret-subkeys.asc', variable: 'KEYRING'),
                string(credentialsId: 'gpg-passphrase', variable: 'KEYRING_PASSPHRASE') ]) {
              sh '''
                if [[ $PROMOTE == false ]]; then
                  promotion_argument='-Dorg.eclipse.justj.p2.manager.args='
                fi
                mvn \
                  --no-transfer-progress \
                  $promotion_argument \
                  -Pgpg-sign \
                  -Dgpg.passphrase="${KEYRING_PASSPHRASE}" \
                  -Dtycho.pgp.signer.bc.secretKeys="${KEYRING}" \
                  -Dorg.eclipse.justj.p2.manager.build.url=$JOB_URL \
                  -Dorg.eclipse.justj.p2.manager.relative=$PUBLISH_LOCATION \
                  -Dgit.commit=$GIT_COMMIT \
                  -Dbuild.id=$BUILD_NUMBER \
                  -Dbuild.type=$BUILD_TYPE \
                  clean \
                  verify
                '''
            }
          }
        }
      }
    }
  }

  post {
    failure {
      archiveArtifacts 'orbit-aggregation/**'
      mail to: 'ed.merks@gmail.com',
      subject: "[Orbit CI] Build Failure ${currentBuild.fullDisplayName}",
      mimeType: 'text/html',
      body: "Project: ${env.JOB_NAME}<br/>Build Number: ${env.BUILD_NUMBER}<br/>Build URL: ${env.BUILD_URL}<br/>Console: ${env.BUILD_URL}/console"
    }

    fixed {
      mail to: 'ed.merks@gmail.com',
      subject: "[Orbit CI] Back to normal ${currentBuild.fullDisplayName}",
      mimeType: 'text/html',
      body: "Project: ${env.JOB_NAME}<br/>Build Number: ${env.BUILD_NUMBER}<br/>Build URL: ${env.BUILD_URL}<br/>Console: ${env.BUILD_URL}/console"
    }

    cleanup {
      deleteDir()
    }
  }
}